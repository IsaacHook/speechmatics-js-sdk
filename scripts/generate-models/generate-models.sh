#!/bin/bash

OUTPUT_MODELS_DIRECTORY='../../src/types/models'

pip3 install -r requirements.txt

# Get a 'fake' openapi spec from the async realtime-api spec (we just need the schemas)
python3 transform_async_to_openapi.py

# Generate models from the generated openapi spec using the openapi-generator tool
openapi-generator generate -i openapi-transformed.yaml -g typescript-axios -o ./openapi_models_tmp -c ../../autogen.json
mkdir -p ${OUTPUT_MODELS_DIRECTORY}
rm -r  ${OUTPUT_MODELS_DIRECTORY}/*
# rm ${OUTPUT_MODELS_DIRECTORY}/../runtime.ts
mv ./openapi_models_tmp/models/* ${OUTPUT_MODELS_DIRECTORY}
# mv ./openapi_models_tmp/runtime.ts ${OUTPUT_MODELS_DIRECTORY}/../

# Models import these couple of functions from the autogenerated file runtime.ts
# We don't need anything else from the autogenerated runtime.ts file so 
# we just create the file with the functions needed
# cat > ${OUTPUT_MODELS_DIRECTORY}/../runtime.ts <<'EOF'
# export function exists(json: any, key: string) {
#     const value = json[key];
#     return value !== null && value !== undefined;
# }

# export function mapValues(data: any, fn: (item: any) => any) {
#   return Object.keys(data).reduce(
#     (acc, key) => ({ ...acc, [key]: fn(data[key]) }),
#     {}
#   );
# }
# EOF

# Delete temp files
rm openapi-transformed.yaml
rm -rf openapi_models_tmp
